{
    "name": "HTTP",
    "scopeName": "source.http",
    "patterns": [
        {
            "include": "#section-header"
        },
        {
            "include": "#teapie-name-directive"
        },
        {
            "include": "#teapie-directives"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#request-line"
        },
        {
            "include": "#header"
        },
        {
            "include": "#variable"
        },
        {
            "include": "#json-body"
        }
    ],
    "repository": {
        "section-header": {
            "match": "^(###)\\s+(.*)$",
            "captures": {
                "1": { "name": "markup.heading.http" },
                "2": { "name": "entity.name.section.http" }
            }
        },
        "teapie-name-directive": {
            "match": "^(#\\s*@name)\\s+(.*)$",
            "captures": {
                "1": { "name": "keyword.control.directive.teapie.http" },
                "2": { "name": "string.unquoted.directive.value.teapie.http" }
            }
        },
        "teapie-directives": {
            "patterns": [
                {
                    "match": "^(##)\\s*(TEST-[A-Z-]+)(?::\\s*(.+))?$",
                    "captures": {
                        "1": { "name": "comment.line.number-sign.http" },
                        "2": { "name": "markup.inserted.http" },
                        "3": { "name": "string.unquoted.http" }
                    }
                },
                {
                    "match": "^(##)\\s*(RETRY-[A-Z-]+)(?::\\s*(.+))?$",
                    "captures": {
                        "1": { "name": "comment.line.number-sign.http" },
                        "2": { "name": "markup.changed.http" },
                        "3": { "name": "string.unquoted.http" }
                    }
                },
                {
                    "match": "^(##)\\s*(AUTH-[A-Z-]+)(?::\\s*(.+))?$",
                    "captures": {
                        "1": { "name": "comment.line.number-sign.http" },
                        "2": { "name": "markup.deleted.http" },
                        "3": { "name": "string.unquoted.http" }
                    }
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.http",
                    "match": "^//.*$"
                },
                {
                    "name": "comment.line.number-sign.http",
                    "match": "^#(?!\\s*@name).*$"
                },
                {
                    "name": "comment.line.double-hash.http",
                    "match": "^##(?!\\s*(?:TEST|RETRY|AUTH)-[A-Z-]+).*$"
                }
            ]
        },
        "request-line": {
            "patterns": [
                {
                    "match": "^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|TRACE|CONNECT)\\s+",
                    "captures": {
                        "1": { "name": "keyword.other.http-method.http" }
                    }
                },
                {
                    "match": "\\s+(HTTP/[0-9.]+)$",
                    "captures": {
                        "1": { "name": "constant.language.http-version.http" }
                    }
                },
                {
                    "match": "\\s+([^\\s]+)\\s*",
                    "captures": {
                        "1": { "name": "entity.name.function.http" }
                    }
                }
            ]
        },
        "header": {
            "match": "^([^:]+):\\s*(.*)$",
            "captures": {
                "1": { "name": "string.other.header-name.http" },
                "2": { "name": "string.other.header-value.http" }
            }
        },
        "variable": {
            "name": "meta.template.expression.http",
            "match": "(\\{\\{)([^}]+)(\\}\\})",
            "captures": {
                "1": { "name": "punctuation.definition.template-expression.begin.http" },
                "2": {
                    "patterns": [
                        {
                            "match": "\\.",
                            "name": "keyword.operator.accessor.http"
                        },
                        {
                            "match": "\\$",
                            "name": "keyword.operator.accessor.http"
                        },
                        {
                            "match": "[^.\\s]+",
                            "name": "variable.other.readwrite.http"
                        }
                    ]
                },
                "3": { "name": "punctuation.definition.template-expression.end.http" }
            }
        },
        "json-body": {
            "begin": "\\{",
            "end": "\\}",
            "patterns": [
                {
                    "include": "#json-value"
                }
            ]
        },
        "json-value": {
            "patterns": [
                {
                    "include": "#json-constant"
                },
                {
                    "include": "#json-string"
                },
                {
                    "include": "#json-number"
                },
                {
                    "include": "#json-object"
                },
                {
                    "include": "#json-array"
                }
            ]
        },
        "json-object": {
            "begin": "\\{",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.dictionary.begin.json" }
            },
            "end": "\\}",
            "endCaptures": {
                "0": { "name": "punctuation.definition.dictionary.end.json" }
            },
            "patterns": [
                {
                    "name": "meta.structure.dictionary.json",
                    "begin": "\"",
                    "beginCaptures": {
                        "0": { "name": "punctuation.support.type.property-name.begin.json" }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": { "name": "punctuation.support.type.property-name.end.json" }
                    },
                    "patterns": [
                        {
                            "name": "support.type.property-name.json",
                            "match": "[^\"\\\\]+"
                        }
                    ]
                },
                {
                    "include": "#json-value"
                }
            ]
        },
        "json-array": {
            "begin": "\\[",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.array.begin.json" }
            },
            "end": "\\]",
            "endCaptures": {
                "0": { "name": "punctuation.definition.array.end.json" }
            },
            "patterns": [
                {
                    "include": "#json-value"
                }
            ]
        },
        "json-string": {
            "name": "string.quoted.double.json",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.json",
                    "match": "\\\\."
                }
            ]
        },
        "json-number": {
            "name": "constant.numeric.json",
            "match": "-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?"
        },
        "json-constant": {
            "match": "\\b(?:true|false|null)\\b",
            "name": "constant.language.json"
        }
    }
} 